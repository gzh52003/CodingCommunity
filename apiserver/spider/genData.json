[{"article_id":"6864800559396814862","user_id":"1626932938285976","category":"前端","create_time":"1598335964","is_original":1,"digg_count":3,"comment_count":0,"view_count":214,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3a033f27de140d6af13ce03b6c50c14~tplv-k3u1fbpfcp-zoom-1.image","title":"用网页模拟生命：WebGL 版康威生命游戏","brief_content":"值此七夕佳节之际，正适合讨论创造生命的话题。虽然你未必有机会谈一笔几个亿的大生意，但有了 JavaScript，在网页里征服几百万个像素还是绰绰有余的——这就是我们这次的主题，康威生命游戏。 康威生命游戏，是英国数学家 John Horton Conway 发明的一种元胞自动机…","is_real_data":0},{"article_id":"6864740285303324686","user_id":"360295543341165","category":"前端","create_time":"1598322000","is_original":1,"digg_count":26,"comment_count":10,"view_count":1430,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a2f6fd42a618438db9a16bad18f41e3b~tplv-k3u1fbpfcp-zoom-1.image","title":"强烈推介的几个微信小程序开发小技巧，简单又实用","brief_content":"前段时间在下开发了个微信小程序，开发过程中总结了一些我觉得对我有用的小技巧，提炼出来，相当于一个总结复盘，也希望可以帮助到大家。如果对大家确实有帮助，别忘了点赞哦 🌟 ～ 1. 开发中可能遇到的坑以及 Tips 本来想写个小技巧的，结果我总结了一堆坑，没上手之前完全想象不到微…","is_real_data":0},{"article_id":"6864724659904970760","user_id":"1556564164489389","category":"前端","create_time":"1598318280","is_original":1,"digg_count":21,"comment_count":5,"view_count":1683,"cover_image":"","title":"如何使用 Docker 高效部署 Node 应用","brief_content":"一个合理并且高效的部署方案，不仅能够实现快速升级，平滑切换，负载均衡，应用隔离等部署特性，而且配有一套成熟稳定的监控。 kubernetes 把 Node 应用视作一个服务端应用的黑盒子，完美匹配了以上条件，越来越多的团队把 node 部署在 k8s 上。 但在此之前，需要先把…","is_real_data":0},{"article_id":"6864350927768748039","user_id":"3808363978174302","category":"前端","create_time":"1598231291","is_original":1,"digg_count":255,"comment_count":101,"view_count":16559,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b8508f5f5b004ad2b2874795848936a1~tplv-k3u1fbpfcp-zoom-1.image","title":"ElementUI 组件库之外，供我们选择的 Vue 组件库还有很多！","brief_content":"Vue 组件千千万，只要不行咱就换。 说正经的，这意味着后期 ElementUI 将可能无人维护，就算 Vue3.0 正式版出来 ，ElementUI 的代码也将不会被迭代。从下面的图片中我们也可以看到，最新的一次更新在今年的 5 月 18 日，Github 上 46k+ ⭐ …","is_real_data":0},{"article_id":"6864742910290722829","user_id":"1714893872170573","category":"后端","create_time":"1598322584","is_original":1,"digg_count":16,"comment_count":3,"view_count":600,"cover_image":"","title":"IDEA巧用Postfix Completion让码速起飞","brief_content":"1. 情景展示 自从做 Java 开发之后，IDEA 编辑器是不可少的。 在 IDEA 编辑器中，有很多高效的代码补全功能，尤其是 Postfix Completion 功能，可以让编写代码更加的流畅。 Postfix completion 本质上也是代码补全，它比 Live …","is_real_data":0},{"article_id":"6864737961188163598","user_id":"2664871913331342","category":"前端","create_time":"1598321376","is_original":1,"digg_count":4,"comment_count":1,"view_count":634,"cover_image":"","title":"一文讲透ES6箭头函数","brief_content":"最近是校招季，有时会问同学关于箭头函数和普通函数异同，往往能够得到一些表面的回答，但不够全面不够深入。于是写一篇来彻底讲透箭头函数。 箭头函数是ES6引入到JavaScript中的，是一种新式的匿名函数的写法，类似于其他语言中Lambda函数。箭头函数和传统函数有很多的不同，例…","is_real_data":0},{"article_id":"6864378349512065038","user_id":"2752832847753085","category":"前端","create_time":"1598237688","is_original":1,"digg_count":233,"comment_count":16,"view_count":5899,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc0e6f413cfa4dbeaf323509249f9a62~tplv-k3u1fbpfcp-zoom-1.image","title":"彻底搞懂闭包，柯里化，手写代码，金九银十不再丢分！","brief_content":"这段时间我试着通过思维导图来总结知识点，主要关注的是一些相对重要或理解难度较高的内容。下面是同系列文章： 如果您需要换个角度看闭包，请直接打开解读闭包，这次从ECMAScript词法环境，执行上下文说起。 本文总结了javascript中函数的常见知识点，包含了基础概念，闭包，…","is_real_data":0},{"article_id":"6864415407043051534","user_id":"2647279732263159","category":"后端","create_time":"1598246286","is_original":1,"digg_count":7,"comment_count":1,"view_count":578,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22986ce344444b478f36ba06cc06b485~tplv-k3u1fbpfcp-zoom-1.image","title":"工具人不好当，至少也要会如何配置MyBatis！","brief_content":"大家好，我是小菜，一个渴望在互联网行业做到蔡不菜的小菜。可柔可刚，点赞则柔，白嫖则刚！ MyBatis以封装少、高性能、可优化、高灵活度等特性成为当今最流行的Java互联网持久层框架。 最早之前 Java 程序都是通过 JDBC（Java Data Base Connectiv…","is_real_data":0},{"article_id":"6864717348964663309","user_id":"958429871749192","category":"后端","create_time":"1598316644","is_original":1,"digg_count":11,"comment_count":3,"view_count":600,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de25983ce03647e1b02f9dbc81eabecf~tplv-k3u1fbpfcp-zoom-1.image","title":"mall-swarm 微服务电商项目发布重大更新，打造Spring Cloud最佳实践！","brief_content":"之前把我的mall项目更新到了SpringBoot 2.3.0版本，微服务版本mall-swarm也已同步更新了。此次更新完善了项目的Spring Cloud技术栈，升级至Spring Cloud Hoxton版本并加入了Spring Cloud Alibaba、Oauth2和…","is_real_data":0},{"article_id":"6864692212442398728","user_id":"2101921963861687","category":"后端","create_time":"1598310880","is_original":1,"digg_count":6,"comment_count":0,"view_count":293,"cover_image":"","title":"完美解决方案-雪花算法ID到前端之后精度丢失问题","brief_content":"最近公司的一个项目组要把以前的单体应用进行为服务拆分，表的ID主键使用Mybatis plus默认 的雪花算法来生成。 快下班的时候，小伙伴跑过来找我，：“快给我看看这问题，卡这卡了小半天了！”。连拉带拽，连哄带骗的把我拉到他的电脑前面。这位小伙伴在我看来技术不算是大牛，但经验…","is_real_data":0},{"article_id":"6864487800969003016","user_id":"747323637640237","category":"前端","create_time":"1598263151","is_original":1,"digg_count":6,"comment_count":0,"view_count":389,"cover_image":"","title":"修复flutter_webview_plugin在页面滑出时web图层残留的问题","brief_content":"webview_flutter 的性能要明显弱于 flutter_webview_plugin，其所造成的卡顿是肉眼可见，不需要看什么fps、dumpsy啥的...尤其是稍微复杂一些的页面。 基于此我选择了flutter_webview_plugin，当然它也有不足。 由于其本…","is_real_data":0},{"article_id":"6864712731484749831","user_id":"2013961030742589","category":"前端","create_time":"1598315523","is_original":1,"digg_count":9,"comment_count":10,"view_count":575,"cover_image":"","title":"从零开始实现VS Code基金插件","brief_content":"随着7月一波牛市行情，越来越多的人投身A股行列，但是股市的风险巨大，有人一夜暴富，也有人血本无归，所以对于普通人来说基金定投是个不错的选择，本人也是基金定投的一枚小韭菜。 上班的时候经常心理痒痒，想看看今天的基金又赚（ge）了多少钱，拿出手机打开支付宝的步骤过于繁琐，而且我也不…","is_real_data":0},{"article_id":"6864570298767769607","user_id":"2629687543862974","category":"前端","create_time":"1598282322","is_original":1,"digg_count":7,"comment_count":1,"view_count":505,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d632e581f86b45679a3680fac62eae70~tplv-k3u1fbpfcp-zoom-1.image","title":"总结vue的6大高级特性——及浅谈一下nextTickkeep-alive的原理 ","brief_content":"1. 自定义v-model 相信大家对于v-model这个指令都很熟悉了。它其实就是一个 &#x3C;input type=\"text\" :value=\"num\" @input=\"num=$event.target.value\">的语法糖。 但是呢，我们也发现了这个指令只能应用…","is_real_data":0},{"article_id":"6864431285935276040","user_id":"1926000101569870","category":"iOS","create_time":"1598249968","is_original":1,"digg_count":2,"comment_count":0,"view_count":314,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89a2bbccc25a4655b4def0c71f333706~tplv-k3u1fbpfcp-zoom-1.image","title":"老司机 iOS 周报 #125 | 2020-08-24","brief_content":"老司机 iOS 周报，只为你呈现有价值的信息。 你也可以为这个项目出一份力，如果发现有价值的信息、文章、工具等可以到 Issues 里提给我们，我们会尽快处理。记得写上推荐的理由哦。有建议和意见也欢迎到 Issues 提出。 @张嘉夫：近期发现了一种非常规的、通过 Xcode …","is_real_data":0},{"article_id":"6864398060702760968","user_id":"2348212569517645","category":"前端","create_time":"1598242242","is_original":1,"digg_count":220,"comment_count":16,"view_count":3371,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/437cad7e17314f0b9a86623d7faa2ccf~tplv-k3u1fbpfcp-zoom-1.image","title":"「查缺补漏」我的2020前端面试秘籍，为你秋招保驾护航","brief_content":"开门见山，这篇文章，适合「初级前端」，如果你还在校招的话，或者还在求职的话，可以看看本文，找一找灵感，希望对你们有帮助呀。 先说一下最近个人情况：2020年8月底已经拿到网易有道offer, 这算是我的第一份web前端工作吧，一直以来都是自学前端的，走过很多的弯路，之前的技术栈…","is_real_data":0},{"article_id":"6864743228684369927","user_id":"3773179639119495","category":"前端","create_time":"1598322585","is_original":1,"digg_count":5,"comment_count":0,"view_count":298,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40fa888c47f14a868cc7ad63d775e65d~tplv-k3u1fbpfcp-zoom-1.image","title":"二进制究竟有什么用？齐姐带你看看那些好玩儿的「位操作」","brief_content":"计算机说到底就是 0 和 1，所有的数在内存中都是以二进制的形式储存的。 而位操作，或者说位运算，就是直接对内存中的二进制位进行操作。 位运算可以说是我们的基本功，今天这篇文章就从以下角度和大家一起玩转位运算。 在实际生产中，二进制是用来优化时间和空间的。 二进制的运算，可能并…","is_real_data":0},{"article_id":"6864324335654404104","user_id":"2101921964109880","category":"后端","create_time":"1598225225","is_original":1,"digg_count":112,"comment_count":7,"view_count":6792,"cover_image":"","title":"学会反射后，我被录取了（干货） ","brief_content":"有反必有正，就像世间的阴和阳，计算机的0和1一样。天道有轮回，苍天...（净会在这瞎bibi） 在学习反射之前，先来了解正射是什么。我们平常用的最多的 new 方式实例化对象的方式就是一种正射的体现。假如我需要实例化一个HashMap，代码就会是这样子。 某一天发现，该段程序不…","is_real_data":0},{"article_id":"6864085814571335694","user_id":"3491704662669469","category":"前端","create_time":"1598169554","is_original":1,"digg_count":367,"comment_count":34,"view_count":8709,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15f337b037404afe9ac0421749f78073~tplv-k3u1fbpfcp-zoom-1.image","title":"前端工程师不可不知的Nginx知识","brief_content":"互联网的全球化导致了互联网的数据量快速增长，加上在本世纪初摩尔定律在单核 CPU 上的失效，CPU 朝着多核方向发展，而 Apache 显然并没有做好多核架构的准备，它的一个进程同一时间只能处理一个连接，处理完一个请求后才能处理下一个，这无疑不能应对如今互联网上海量的用户。况且…","is_real_data":0},{"article_id":"6864757711033073678","user_id":"1415826709156109","category":"后端","create_time":"1598326040","is_original":1,"digg_count":3,"comment_count":0,"view_count":83,"cover_image":"","title":"Mysql 如何实现全文检索，关键词跑分","brief_content":"今天一个同事问我，如何使用 Mysql 实现类似于 ElasticSearch 的全文检索功能，并且对检索关键词跑分？我当时脑子里立马产生了疑问？为啥不直接用es呢？简单好用还贼快。但是听他说，数据量不多，客户给的时间非常有限，根本没时间去搭建es，所以还是看一下 Mysql …","is_real_data":0},{"article_id":"6864585112994971662","user_id":"641770521628487","category":"后端","create_time":"1598285986","is_original":1,"digg_count":2,"comment_count":0,"view_count":163,"cover_image":"","title":"Canal v1.1.4版本搭建HA集群","brief_content":"Canal上一个正式版是于2019-9-2发布的v1.1.4，笔者几个月前把这个版本的Canal推上了生产环境，部署了HA集群。过程中虽然遇到不少的坑，但是在不出问题的前提下，Canal的作用还是非常明显的。上周的一次改造上线之后，去掉了原来对业务系统订单数据通过RabbitM…","is_real_data":0},{"article_id":"6864737331484721165","user_id":"1714893872170573","category":"后端","create_time":"1598321217","is_original":1,"digg_count":10,"comment_count":1,"view_count":178,"cover_image":"","title":"Java工程师的进阶之路 RocketMQ篇（二）","brief_content":"1. RocketMQ 简介 RocketMQ前身叫做MetaQ, 在MeataQ发布3.0版本的时候改名为RocketMQ，其本质上的设计思路和Kafka类似，但是和Kafka不同的是其使用Java进行开发，由于在国内的Java受众群体远远多于Scala，所以RocketMQ…","is_real_data":0},{"article_id":"6864753535649579015","user_id":"1556564164485485","category":"前端","create_time":"1598324998","is_original":1,"digg_count":3,"comment_count":0,"view_count":68,"cover_image":"","title":"【性能优化实战】宝宝知道小程序FMP优化实录","brief_content":"","is_real_data":0},{"article_id":"6864072407461101582","user_id":"852876722177533","category":"前端","create_time":"1598166549","is_original":1,"digg_count":31,"comment_count":15,"view_count":3315,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/376abe3795f84eb39f83a262f10d494b~tplv-k3u1fbpfcp-zoom-1.image","title":"🏆 技术专题第三期 | 数据可视化的那些事","brief_content":"掘友们，大家好呀。 第二期技术专题🏆 技术专题第二期 | 我与 Go 的那些事已经结束了，第二期的主题中，有人分享了自己学习 Go 的一些经验，也有人分享了自己学习 Go 遇到的一些坑，所有参与的文章都得到不错的反馈。 没错，第三期来了。数据可视化，是关于数据视觉表现形式的科…","is_real_data":0},{"article_id":"6864324361621995533","user_id":"2858385961407853","category":"前端","create_time":"1598225148","is_original":1,"digg_count":71,"comment_count":18,"view_count":2770,"cover_image":"","title":"学习Vue3.0，先从搭建环境开始","brief_content":"vite是尤大大在今年新鼓捣出来的一个工具，尤大大对vite的描述是这样的: Vite is an opinionated web dev build tool that serves your code via native ES Module imports during …","is_real_data":0},{"article_id":"6864749738827186183","user_id":"2682464104616023","category":"后端","create_time":"1598324134","is_original":1,"digg_count":1,"comment_count":0,"view_count":121,"cover_image":"","title":"小六六学Netty系列之初识Netty","brief_content":"为了学习Netty，我们前面铺垫了那么多，NIO Java的零拷贝，UNIX的I/O模型等等。 Netty 是由 JBOSS 提供的一个 Java 开源框架。Netty 提供异步的、基于事件驱动的网络应用程序框架，用以快速开发高性能、高可靠性的网络 IO 程序 Netty 是目…","is_real_data":0},{"article_id":"6864383032233721864","user_id":"2330620350708823","category":"前端","create_time":"1598238720","is_original":1,"digg_count":62,"comment_count":7,"view_count":2659,"cover_image":"","title":"Vue3实现递归菜单组件-腾讯高级前端25k面试题","brief_content":"小伙伴们好久不见，最近刚入职新公司，需求排的很满，平常是实在没时间写文章了，更新频率会变得比较慢。 周末在家闲着无聊，突然小弟过来紧急求助，说是面试腾讯的时候，对方给了个 Vue 的递归菜单要求实现，回来找我复盘。 正好这周是小周，没想着出去玩，就在家写写代码吧，我看了一下需求…","is_real_data":0},{"article_id":"6864701604219191304","user_id":"4107431173429367","category":"后端","create_time":"1598313289","is_original":1,"digg_count":2,"comment_count":0,"view_count":51,"cover_image":"","title":"MyCat + MySQL 主从部署流程（下）","brief_content":"上周研究了一下数据库中间件 MyCat ，并验证了 “MyCat 单机 + MySQL 主从复制” 的部署方案，本文接上篇，继续介绍这一方案的部署过程。 MyCat 是一种分布式数据库中间件，跟其他分布式系统的核心思想一样，数据分散存储在不同主机上。核心概念有四个： 节点主机：…","is_real_data":0},{"article_id":"6864739866979434503","user_id":"2911162523471549","category":"阅读","create_time":"1598321814","is_original":1,"digg_count":3,"comment_count":0,"view_count":132,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dc65e66f0d44eba89d4982ccb9bbf9d~tplv-k3u1fbpfcp-zoom-1.image","title":"一种基于RSA+AES算法实现的软件授权License设计思路（附源码）","brief_content":"本篇文章通过介绍基础加密算法知识结合软件授权激活需求，提出了一种基于RSA+AES加密算法的离线软件授权激活码的设计思路及示例代码。即使您没有软件授权设计方面的需求，也可以通过本文加深对RSA+AES加密算法的理解。 软件授权机制的基础就是加密算法。加密算法可以简单分为对称加密…","is_real_data":0},{"article_id":"6864724677504270349","user_id":"641770521630270","category":"阅读","create_time":"1598318280","is_original":1,"digg_count":3,"comment_count":0,"view_count":147,"cover_image":"","title":"Flutter中的StatelessWidget及其生命周期","brief_content":"继承自Widget,状态不可变，用于描述UI展示中相对固定的部分，如纯展示，不会被改变的UI。 通过其类的定义能够看到StatelessWidget配置StatelessElement。 描述：用于描述当前widget所代表的UI。 调用时机： framework会使用buil…","is_real_data":0},{"article_id":"6864163222187540488","user_id":"2717648473821736","category":"前端","create_time":"1598187609","is_original":1,"digg_count":68,"comment_count":8,"view_count":1800,"cover_image":"","title":"从 0 到 1 node 项目管理系统：构建篇-jenkins","brief_content":"Jenkins 是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于 Hudson（Hudson 是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行。Jenkins 用 Java 语言编写，可在 Tomcat 等流行的 servlet 容器中运行，也…","is_real_data":0},{"article_id":"6864381343011504136","user_id":"536217404054167","category":"前端","create_time":"1598238368","is_original":1,"digg_count":1,"comment_count":0,"view_count":52,"cover_image":"","title":"「完全理解」如何配置项目中的 Babel","brief_content":"Babel，已经是每个项目都必不可少的依赖了。不过大多数同学可能并没有自己配置 Babel 的经验和机会 简单说就是源码通过 Babel 处理后会得到向后兼容的代码。我们可以按照这个逻辑写出最简单的 Babel 用例 可以发现待转化的源码没有任何变化。因为 @babel/cor…","is_real_data":0},{"article_id":"6864111058891538445","user_id":"1081575171701582","category":"前端","create_time":"1598175494","is_original":1,"digg_count":36,"comment_count":4,"view_count":2363,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/39e5a804246b48e9ba089b670c45626c~tplv-k3u1fbpfcp-zoom-1.image","title":"重学前端-Promise用法详解","brief_content":"在JavaScript的世界中，Promise毫无疑问是里程碑式的一个变革，它不仅解决了异步编程中，回调函数嵌套过深的问题，还为Async/Await奠定了基础。 Promise规范最早由CommonJS社区提出，后来成为ES2015(ES6)语言规范，到现在可以说已经成了异步…","is_real_data":0},{"article_id":"6864743627537678349","user_id":"905653310990797","category":"后端","create_time":"1598322689","is_original":1,"digg_count":2,"comment_count":0,"view_count":158,"cover_image":"","title":"分库分表需要考虑的问题及方案","brief_content":"Sharding的基本思想就要把一个数据库切分成多个部分放到不同的数据库(server)上，从而缓解单一数据库的性能问题。不太严格的讲，对于海量数据的数据库，如果是因为表多而数据多，这时候适合使用垂直切分，即把关系紧密（比如同一模块）的表切分出来放在一个server上。如果表并…","is_real_data":0},{"article_id":"6864734617069928456","user_id":"184373686051662","category":"Android","create_time":"1598320593","is_original":1,"digg_count":1,"comment_count":0,"view_count":63,"cover_image":"","title":"Groovy解析之深入理解元编程原理","brief_content":"其实这一切都要归功于 Groovy 编译器，Groovy 编译器在编译 Groovy 代码的时候，并不是像 Java 一样，直接编译成字节码，而是编译成 “动态调用的字节码”。 简单的一行代码，经过 Groovy 编译器编译之后，变得如此复杂。而这就是 Groovy 编译器做的…","is_real_data":0},{"article_id":"6862560722531352583","user_id":"289926798645575","category":"前端","create_time":"1597814676","is_original":1,"digg_count":677,"comment_count":52,"view_count":22642,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5fc1c1ced5d54f9fa2468ea5f8193bd8~tplv-k3u1fbpfcp-zoom-1.image","title":"进阶高级前端，这9种Vue技术你掌握了吗？","brief_content":"现在，Vue.js已成为前端开发的热门框架。有很多工程师利用Vue.js的便利性和强大功能。但是，我们完成的某些解决方案可能未遵循最佳做法。好吧，让我们看一下那些必备的Vue技术。 1. 函数组件 创建一个函数组件非常容易，你需要做的就是在SFC中添加一个 functional…","is_real_data":0},{"article_id":"6864750144097615879","user_id":"3122268755225869","category":"阅读","create_time":"1598324198","is_original":1,"digg_count":1,"comment_count":0,"view_count":34,"cover_image":"","title":"Kafka技术核心笔记（四）基本使用（2）","brief_content":"其基本思想就是允许应用程序在不修改逻辑的情况下，动态地实现一组可插拔的事件处理逻辑链。它能够在主业务操作的前后多个时间点上插入对应的“拦截”逻辑。下面这张图展示了 Spring MVC 拦截器的工作原理： Kafka 拦截器借鉴了这样的设计思路。你可以在消息处理的前后多个时点动…","is_real_data":0},{"article_id":"6864753221894668302","user_id":"2612095356510279","category":"阅读","create_time":"1598324945","is_original":1,"digg_count":1,"comment_count":0,"view_count":45,"cover_image":"","title":"【译】5种Git工作流改善你的开发流程","brief_content":"我还从没见过哪个开发者看到冲突信息不会沮丧的扯头发。 尝试解决每个合并冲突是每个开发者讨厌的，尤其当你正准备上线部署的时候。 这就是正确设置Git工作流可以为你的开发工作带来巨大的好处。 当然，拥有正确的Git工作流并不会为你解决所有的问题，但这是朝着正确方向迈出的一步。 毕竟…","is_real_data":0},{"article_id":"6864520204731285511","user_id":"4388906147515367","category":"前端","create_time":"1598270804","is_original":1,"digg_count":34,"comment_count":2,"view_count":757,"cover_image":"","title":"初探视频原理和FFmpeg","brief_content":"短视频大行其道的年代，作为程序员势必需要了解：视频编辑背后的原理和技术。本文简略的描述了视频的组成原理和常用的视频编辑工具，以及在 NodeJS 中的用法。 想要了解视频原理，首先应该从图像原理开始说起。 1. 像素 图像画面由一个数字序列表示的图像中的一个最小单位色块，被称之…","is_real_data":0},{"article_id":"6864228501885714445","user_id":"289926798645575","category":"开发工具","create_time":"1598202849","is_original":1,"digg_count":30,"comment_count":10,"view_count":2514,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/36c8fb1519684dd19c71da8b5f7d1455~tplv-k3u1fbpfcp-zoom-1.image","title":"10个漂亮的VSCode浅色（Light）主题","brief_content":"为VS Code选择主题时，可以使用的数量几乎是无限的。我之前写过一篇文章(《高效的编码：我的VS Code设置》)，介绍了VS Code的漂亮主题。但是，有一位细心的读者提到，这些主题都是黑暗主题。 在白天敲代码的时候，一般建议使用浅色（Light）的主题。由于大多数程序员会…","is_real_data":0},{"article_id":"6864410873709592584","user_id":"3808363978429613","category":"前端","create_time":"1598245272","is_original":1,"digg_count":42,"comment_count":9,"view_count":1042,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bb6d485b923a4fd5aefccd9e831cfba3~tplv-k3u1fbpfcp-zoom-1.image","title":"基于React+Koa实现一个h5页面可视化编辑器－Dooring | 🏆 技术专题第三期征文","brief_content":"前段时间笔者一直忙于数据可视化方面的工作，比如如何实现拖拽式生成可视化大屏，如何定制可视化图表交互和数据导入方案等，这块需求在B端企业中应用非常大，所以非常有探索价值。 本篇文章并非和数据可视化相关，而是通过抽象技术底层，将其应用于H5页面可视化搭建上，通过技术的手段实现拖拽式…","is_real_data":0},{"article_id":"6864360098077081613","user_id":"325111173878983","category":"后端","create_time":"1598233400","is_original":1,"digg_count":39,"comment_count":7,"view_count":1409,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1277908fd464a1281cf9b9c82cfbb5c~tplv-k3u1fbpfcp-zoom-1.image","title":"RabbitMQ高级之消息限流与延时队列","brief_content":"本篇是消息队列RabbitMQ的第五弹。 我所讲的知识点在工作中基本上也够用了，希望大家好好消化。 旧坑填上之后可能会慢慢开新坑了，同时因为现在到九月中旬这段时间我有一场考试需要筹备，所以文章更新可能会比较慢，但是一周一更算是最低限度把，希望大家多多担待。 祝有好收获，先赞后看…","is_real_data":0},{"article_id":"6864465700535795720","user_id":"78820567950622","category":"前端","create_time":"1598257991","is_original":1,"digg_count":1,"comment_count":0,"view_count":147,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c03c4b47764428096ca2f7a2b36b27f~tplv-k3u1fbpfcp-zoom-1.image","title":"Ohbug - 前端监控新方向","brief_content":"众所周知，前端监控包括了异常监控、行为监控、性能监控等等，且每种业务对于需要监控的内容既有共通的异常、性能监控等，又有自定义的用户行为、用户画像等内容需要收集。 常用的监控平台已有许多，sentry、fundebug、frontjs 等，他们从异常监控、数据分析到告警通知等一系…","is_real_data":0},{"article_id":"6864332891887927304","user_id":"3298190611191576","category":"前端","create_time":"1598227589","is_original":1,"digg_count":30,"comment_count":2,"view_count":1346,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/797ed1c6c9d44ee8b7c4ec7303fe7885~tplv-k3u1fbpfcp-zoom-1.image","title":"想要在JS中把正则玩得飘逸，学会这几个函数的使用必不可少","brief_content":"在之前的一系列文章中，我们讲解了很多关于正则表达式的知识。那么作为一个前端工程师，如果想要把这些知识应用到我们平时的开发中去的话，就需要知道在JavaScript中，能够使用正则的函数有哪些？然后它们各自的功能是什么？有哪些需要注意的地方？只有掌握好了每一个方法的使用场景，我们…","is_real_data":0},{"article_id":"6863351989016166407","user_id":"976022054907709","category":"前端","create_time":"1597998680","is_original":1,"digg_count":76,"comment_count":17,"view_count":8948,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5908afe125ab478fbc739c68aed9031c~tplv-k3u1fbpfcp-zoom-1.image","title":"Node.js入门系列（一）","brief_content":"首先要感谢很多私信和评论的小伙伴的信任和鼓励，让我有动力继续写下去。 大前端很大，大到我们常常看不到尽头，零零散散的学习总是让我们无法触类旁通，相互鼓励和\"揭短\"才能让自己变得更强大，所以我在文末为独行的小伙伴准备了前端大家庭，有她，前端进阶不孤独。我们仰慕技术大佬，而他们也曾…","is_real_data":0},{"article_id":"6864438643727433741","user_id":"2418581313687390","category":"前端","create_time":"1598251721","is_original":1,"digg_count":28,"comment_count":5,"view_count":1091,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/31949965776343f19f985382daf359c2~tplv-k3u1fbpfcp-zoom-1.image","title":"react-hooks如何使用？","brief_content":"1. 什么是react-hooks? 以上就是react-hooks主要的api,接下来我会和大家分享一下这些api的用法，以及使用他们的注意事项。 1 react-hooks可以让我们的代码的逻辑性更强，可以抽离公共的方法，公共组件。 2 react-hooks思想更趋近于函…","is_real_data":0},{"article_id":"6864595835661844487","user_id":"3526889031869869","category":"iOS","create_time":"1598288495","is_original":1,"digg_count":0,"comment_count":0,"view_count":137,"cover_image":"","title":"OpenGL ES 2.0 ——一张胶片的纹理渲染之旅","brief_content":"前面的博客没有过多的涉及代码，这篇博客就聊聊渲染纹理，和OpenGL ES2.0 API的使用 和 步骤。 什么是纹理？ 纹理可以是一张图片也可以是颜色，就好像我们穿着的那一层衣服，他就是纹理；你在赤裸的身体上用一种或多种颜料画满了画，这层画也是纹理，他就是最外层的包装。 什么…","is_real_data":0},{"article_id":"6864468840836038664","user_id":"61228381386487","category":"后端","create_time":"1598258772","is_original":1,"digg_count":17,"comment_count":2,"view_count":1163,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6adb1b0130fc4671bb5cf88ab2813326~tplv-k3u1fbpfcp-zoom-1.image","title":"定时任务最简单的3种实现方法（超实用）","brief_content":"定时任务在实际的开发中特别常见，比如电商平台 30 分钟后自动取消未支付的订单，以及凌晨的数据汇总和备份等，都需要借助定时任务来实现，那么我们本文就来看一下定时任务最简单的几种实现方式。 Timer 类实现定时任务虽然方便，但在使用时需要注意以下问题。 从上述结果中可以看出，当…","is_real_data":0},{"article_id":"6864368240097755144","user_id":"4406498337242685","category":"Android","create_time":"1598235312","is_original":1,"digg_count":1,"comment_count":0,"view_count":1883,"cover_image":"","title":"时势下的HMS和GMS前世今生——今生篇之三问突破口","brief_content":"谢HMS Core总体组运营邀请，分享个人的一些观点。 关于HMS突破口的讨论已有多名技术、营销专家、同事在内部掀起热烈讨论，虽然HMS和GMS的前世今生—— 前世篇整合了一些思考，但构建移动生态是个宏大命题，且业界并无无成熟案例，开放式命题下，探索式发问有益于深入问题。 本篇…","is_real_data":0},{"article_id":"6864404831093587976","user_id":"3562073402902350","category":"后端","create_time":"1598243819","is_original":1,"digg_count":11,"comment_count":0,"view_count":691,"cover_image":"","title":"使用Spring Boot DevTools优化你的开发体验","brief_content":"某日少年收到前端同学发来的消息说联调的接口响应异常🙃，少年表现的很平静🙂，因为这种事情太平常了😑。于是询问详情之后开始打开自己的代码查找问题所在，没过五分钟就发现了问题。少年修改完代码之后将本地启动的项目停止然后再重新启动。由于当前的服务端项目是一个巨大的单体应用，启动需…","is_real_data":0},{"article_id":"6859784103621820429","user_id":"852876722177533","category":"后端","create_time":"1597169936","is_original":1,"digg_count":60,"comment_count":41,"view_count":10078,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5163396506f2443aae02753e2f9d8116~tplv-k3u1fbpfcp-zoom-1.image","title":"🏆 技术专题第二期 | 我与 Go 的那些事","brief_content":"掘友们，大家好呀。 第一期技术专题🏆 技术专题第一期 | 聊聊 Deno的一些事儿发布后，一些掘友分享了自己对 Deno 学习的解读，以及 Deno 上手的教学文章。看着这些分享，不由得让掘金酱分外羡（ji）慕（du），感谢各位掘友们的无私奉献，我们也会继续跟踪 Deno 后…","is_real_data":0},{"article_id":"6864453229154533389","user_id":"1662117313017934","category":"后端","create_time":"1598255146","is_original":1,"digg_count":1,"comment_count":0,"view_count":130,"cover_image":"","title":"ElasticSearch-生命周期管理","brief_content":"...... 在这些众多功能中，Index Lifecycle Management(索引生命周期管理，后文简称 ILM) 是最受社区欢迎的。今天我们从以下几方面来快速了解下该功能： 索引(Index)是 Elasticsearch 中数据组织的一个逻辑概念，是具有相同或相似字…","is_real_data":0},{"article_id":"6864168067182968839","user_id":"3289337926283534","category":"前端","create_time":"1598188808","is_original":1,"digg_count":22,"comment_count":3,"view_count":1733,"cover_image":"","title":"还在问什么是JavaScript构造函数、实例、原型对象以及原型链？看完这篇你就懂","brief_content":"ES6， 全称 ECMAScript 6.0 ，2015.06 发版。在ES6之前，对象不是基于类创建的，而是用一种称为构造函数的特殊函数来定义对象和它们的特征。 构造函数是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与 new 一起使用。我们可以把对象中…","is_real_data":0},{"article_id":"6864365886837686285","user_id":"3087084378135613","category":"Android","create_time":"1598234729","is_original":1,"digg_count":14,"comment_count":0,"view_count":1159,"cover_image":"","title":"读源码长知识 | Android卡顿真的是因为”掉帧“？","brief_content":"Andriod 界面卡顿是因为掉帧，而掉帧是因为生产帧的速度跟不上消费帧的速度。 消费帧的速度与屏幕刷新率挂钩，屏幕就像连环画，若一秒播放 60 帧，消费一帧的速度为 1000/60 = 16.6 ms，即每 16.6 ms 屏幕就会去取下一帧的显示内容，若没取到，只能继续显示…","is_real_data":0},{"article_id":"6864425883306983432","user_id":"2101921963059271","category":"后端","create_time":"1598248743","is_original":1,"digg_count":8,"comment_count":7,"view_count":1225,"cover_image":"","title":"程序员“迷惑代码”大赏","brief_content":"","is_real_data":0},{"article_id":"6864346705081401352","user_id":"2137106333043070","category":"Android","create_time":"1598230329","is_original":1,"digg_count":23,"comment_count":0,"view_count":917,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/72f1c53e4fa0464b9377d001e6038d6f~tplv-k3u1fbpfcp-zoom-1.image","title":"Android 复习笔记 —— 扒一扒 Context","brief_content":"未完待遇... 你能准确的说出这三行打印语句的执行结果吗？如果不能，你需要认真阅读这篇文章。 Context 是一个抽象类。既然是抽象类，那么它就代表了一类具体对象的通用特征。先来看一下 Context 的类图： ...... 这些与系统环境息息相关的功能都是由 Context…","is_real_data":0},{"article_id":"6862855292577644552","user_id":"2348212569517645","category":"前端","create_time":"1597883368","is_original":1,"digg_count":288,"comment_count":44,"view_count":11426,"cover_image":"","title":"「面经」你可能需要的三轮网易面经","brief_content":"最近一个星期面了几家公司，最后收获了心仪的网易offer，于是推掉了其他的面试，至于一些其他大厂，并没有投简历，由于种种原因（就是菜），准备目前先踏实的学吧。 希望大家秋招顺利，成为offer收割机。 最有意思的就是网易有道第三轮技术面试，因为这个没有具体的答案，有兴趣的可以看…","is_real_data":0},{"article_id":"6864175613209640973","user_id":"3210229683336983","category":"前端","create_time":"1598190499","is_original":1,"digg_count":41,"comment_count":11,"view_count":914,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4bac96b9ddb44489ade2b1f868406476~tplv-k3u1fbpfcp-zoom-1.image","title":"（2.6w字）网络知识点灵魂拷问——前端面试必问","brief_content":"（2）如果浏览器缓存中没有，操作系统会先检查自己本地的hosts文件是否有这个网址映射关系，如果有，就先调用这个IP地址映射，完成域名解析。 （3）如果hosts里没有这个域名的映射，则查找本地DNS解析器缓存，是否有这个网址映射关系，如果有，直接返回，完成域名解析。 （4）如…","is_real_data":0},{"article_id":"6864580947006717966","user_id":"4142615543689454","category":"iOS","create_time":"1598284977","is_original":1,"digg_count":1,"comment_count":0,"view_count":112,"cover_image":"","title":"Swift as as! as? 的理解","brief_content":"目前公司项目中用到的 Swift 比较少，所以对 Swift 的理解也很局限。这里把一些放在笔记中的内容整理下分享出来，看看有没有大牛指点下。","is_real_data":0},{"article_id":"6863705400773083149","user_id":"712139267910237","category":"前端","create_time":"1598081020","is_original":1,"digg_count":138,"comment_count":17,"view_count":3908,"cover_image":"","title":"Babel配置傻傻看不懂？","brief_content":"通过第一节的学习我们知道完成第一步骤解析完AST后，接下来是进入转换，插件在这个阶段就起到关键作用了。 答：presets是预设，举个例子：有一天树酱要去肯德基买鸡翅、薯条、可乐、汉堡。然后我发现有个套餐A包含了(薯条、可乐、汉堡)，那这个present就相当于套餐A，它包含了…","is_real_data":0},{"article_id":"6864323316912488455","user_id":"3456520257288974","category":"前端","create_time":"1598224839","is_original":1,"digg_count":57,"comment_count":3,"view_count":876,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0313896119e46a58eff80fc4d6bea60~tplv-k3u1fbpfcp-zoom-1.image","title":"npm 依赖管理中被忽略的那些细节","brief_content":"提起 npm，大家第一个想到的应该就是 npm install 了，但是 npm install 之后生成的 node_modules 大家有观察过吗？package-lock.json 文件的作用大家知道吗？除了 dependencies 和 devDependencies，…","is_real_data":0},{"article_id":"6864546220124143629","user_id":"782508009988856","category":"前端","create_time":"1598276741","is_original":1,"digg_count":6,"comment_count":1,"view_count":415,"cover_image":"","title":"大声对webpack4.0说声你好之webpack的实战配置与优化(五)","brief_content":"学习了四节之后，我们对webpack可以说是已经有了深刻的认识，相信你也可以根据自己学到的内容对自己的网站等进行一系列的打包。 如果你是从第一节就跟着我走到这里的，那你就算我的webpack老战友了。这节当然你也会学到很多比较有趣的知识，例如： 因为github已经提交了前四节…","is_real_data":0},{"article_id":"6864430795927502862","user_id":"3280598427770424","category":"前端","create_time":"1598249851","is_original":1,"digg_count":15,"comment_count":3,"view_count":774,"cover_image":"","title":"微前端原理和实战（single-spa qiankun）","brief_content":"微前端就是将不同的功能按照不同的维度拆分成多个子应用。通过主应用（基座）来加载这些子应用。 微前端的实现思想就是将一个应用划分成若干个子应用，将子应用打包成一个个的lib。当路径切换 时加载不同的子应用。这样每个子应用都是独立的，技术栈也不用做限制了！从而解决了前 这里借助了社…","is_real_data":0},{"article_id":"6862559324632252430","user_id":"2849531329280551","category":"前端","create_time":"1597814147","is_original":1,"digg_count":412,"comment_count":28,"view_count":10118,"cover_image":"","title":"前端监控平台系列：JS SDK（已开源）","brief_content":"一般情况下都是通过重写js原生事件然后拿到错误信息，比如ajax请求，通过重写xhr、fetch事件来截取接口信息，所以我们需要优先编写一个易于重写事件的函数来复用。 所有的请求第三方库都是基于xhr、fetch二次封装的，所以只需要重写这两个事件就可以拿到所有的接口请求的信息…","is_real_data":0},{"article_id":"6864748480166887438","user_id":"624178332974216","category":"阅读","create_time":"1598323808","is_original":1,"digg_count":1,"comment_count":0,"view_count":63,"cover_image":"","title":"typeScript 配置文件该怎么写？","brief_content":"TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有： 它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在逻辑上比较零散。 大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。 大多数内容比较枯燥，…","is_real_data":0},{"article_id":"6864473591770152968","user_id":"2840793774828264","category":"前端","create_time":"1598259827","is_original":1,"digg_count":8,"comment_count":0,"view_count":440,"cover_image":"","title":"[译] TypeScript 4.0 终于发布了我一直在等待的东西","brief_content":"昨天，微软官宣了 TypeScript 4.0 的候选版本。然后随之而来的 具标签的元组元素（Labeled Tuple Elements），就成为了这篇文章标题的答案。 这是一个人为的例子。IQuery，它旨在描述查询事物的函数的形状。它总是返回一个 Promise 并且使用…","is_real_data":0},{"article_id":"6861501624993447950","user_id":"1996368846261294","category":"前端","create_time":"1597567935","is_original":1,"digg_count":783,"comment_count":59,"view_count":15393,"cover_image":"","title":"CSS八种让人眼前一亮的HOVER效果","brief_content":"巧用伪元素:before、:after等，让你的页面按钮眼前一亮。更多内容：https://github.com/reng99/blogs","is_real_data":0},{"article_id":"6864531142671466504","user_id":"2946346892396120","category":"后端","create_time":"1598273253","is_original":1,"digg_count":5,"comment_count":0,"view_count":399,"cover_image":"","title":"JVM对象内存分配那些事(干货)","brief_content":"我们通过JVM内存分配可以知道JAVA中的对象都是在堆上进行分配，当对象没有被引用的时候，需要依靠GC进行回收内存，如果对象数量较多的时候，会给GC带来较大压力，也间接影响了应用的性能。 为了减少临时对象在堆内分配的数 量，JVM通过逃逸分析确定该对象不会被外部访问。如果不会逃…","is_real_data":0},{"article_id":"6863756420380196877","user_id":"2295436011910894","category":"Android","create_time":"1598092887","is_original":1,"digg_count":56,"comment_count":10,"view_count":1964,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba5c641bcdcc4a3a992eb1d410bded4d~tplv-k3u1fbpfcp-zoom-1.image","title":"“终于懂了” 系列：Android屏幕刷新机制—VSync、Choreographer 全面理解！","brief_content":"在Android中，当我们谈到 布局优化、卡顿优化 时，通常都知道 需要减少布局层级、减少主线程耗时操作，这样可以减少丢帧。如果丢帧比较严重，那么界面可能会有明显的卡顿感。我们知道 通常手机刷新是每秒60次，即每隔16.6ms刷新一次。 问题来了： 本文介绍的内容会详细解释以上…","is_real_data":0},{"article_id":"6863241580753616903","user_id":"2013961030742589","category":"前端","create_time":"1597972957","is_original":1,"digg_count":178,"comment_count":13,"view_count":6527,"cover_image":"","title":"Vue模板编译原理","brief_content":"写过 Vue 的同学肯定体验过， .vue 这种单文件组件有多么方便。但是我们也知道，Vue 底层是通过虚拟 DOM 来进行渲染的，那么 .vue 文件的模板到底是怎么转换成虚拟 DOM 的呢？这一块对我来说一直是个黑盒，之前也没有深入研究过，今天打算一探究竟。 Vue 3 发…","is_real_data":0},{"article_id":"6863995537063215112","user_id":"1662117313518663","category":"前端","create_time":"1598149068","is_original":1,"digg_count":35,"comment_count":4,"view_count":2168,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70f05e564184479b91c413ff523ba4dc~tplv-k3u1fbpfcp-zoom-1.image","title":"前端，你真的知道BOM的这些用法吗？","brief_content":"一. BOＭ简介&#x26;写作背景 二. window对象 使用 window.attr 声明的变量和 var 声明的变量有个区别，使用 var 声明的变量，不能使用 delete 删除，使用 window. 声明的变量可以被删除 三. location对象 四. navig…","is_real_data":0},{"article_id":"6864543222522183693","user_id":"1714893870081591","category":"后端","create_time":"1598276022","is_original":1,"digg_count":10,"comment_count":4,"view_count":340,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c85228c7c95d434d9bd35e92a6d4c06d~tplv-k3u1fbpfcp-zoom-1.image","title":"【干货！！】三句话搞懂 Redis 缓存穿透、击穿、雪崩","brief_content":"如何有效的理解并且区分 Reids 穿透、击穿和雪崩之间的区别，一直以来都挺困扰我的。特别是穿透和击穿，过一段时间就稀里糊涂的分不清了。 为了有效的帮助笔者自己，以及拥有同样烦恼的朋友们区分这三种场景。笔者总结了一些关键词，希望大家可以和我一样通过联想的方式来区分并理解这三种场…","is_real_data":0},{"article_id":"6864517287316520967","user_id":"1116759543790951","category":"后端","create_time":"1598269984","is_original":1,"digg_count":5,"comment_count":0,"view_count":345,"cover_image":"","title":"深入理解 Python 描述符","brief_content":"学习 Python 这么久了，说起 Python 的优雅之处，能让我脱口而出的， Descriptor（描述符）特性可以排得上号。 描述符 是Python 语言独有的特性，它不仅在应用层使用，在语言语法糖的实现上也有使用到（在下面的文章会一一介绍）。 你也许没学过描述符，甚至没…","is_real_data":0},{"article_id":"6862981984801521672","user_id":"430664257386558","category":"前端","create_time":"1597912554","is_original":1,"digg_count":144,"comment_count":27,"view_count":8121,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3235919b1a354ec69c555fcc1b879b8d~tplv-k3u1fbpfcp-zoom-1.image","title":"\"无 Typescript\" 编程","brief_content":"一旦陷入 Typescript 就离不开它了。安全感、智能提示、代码重构.. 使用 Typescript 最终还是要转译为 JavaScript 代码，我不想整这一套构建工具，喜欢直接写完直接跑、直接调试、直接发到 npm.. ... 接着添加一个 jsconfig.json …","is_real_data":0},{"article_id":"6864555988873707527","user_id":"1767670427684968","category":"后端","create_time":"1598279145","is_original":1,"digg_count":10,"comment_count":0,"view_count":334,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba2fb091523346a894009a219b6e5a9b~tplv-k3u1fbpfcp-zoom-1.image","title":"SQL查询语句执行顺序详解","brief_content":"查询操作是关系数据库中使用最为频繁的操作，也是构成其他SQL语句（如DELETE、UPDATE）的基础。当要删除或更新某些记录时，首先要查询出这些记录，然后再对其进行相应的SQL操作。因此基于SELECT的查询操作就显得非常重要。对于查询处理，可将其分为逻辑查询处理及物理查询处…","is_real_data":0},{"article_id":"6862869137710907405","user_id":"4265760847567016","category":"前端","create_time":"1597886268","is_original":1,"digg_count":188,"comment_count":72,"view_count":6776,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c9638b41f5584531b09ae4eb734e14eb~tplv-k3u1fbpfcp-zoom-1.image","title":"面向复杂场景的表单解决方案","brief_content":"1. 背景 云音乐 B 端业务场景非常多，B 端业务相对于 C 端业务产品生命周期更长而且更注重场景的的梳理。很多时候开发 B 端业务都是拷贝之前的代码，这样增加了很多重复而且枯燥的工作量。 中后台系统其实可以拆分成几个比较通用的场景：表单、表格、图表，其中表单涉及到联动、校验…","is_real_data":0},{"article_id":"6864114862159724558","user_id":"2295436007711214","category":"前端","create_time":"1598176521","is_original":1,"digg_count":22,"comment_count":4,"view_count":798,"cover_image":"","title":"图形学——平面中图形碰撞检测梳理","brief_content":"以前做过两年多的canvas图形方向的程序员，但是已经很久没有使用过相关的知识忘记了不少，趁我还有印象特此做一下记录。 如果你有兴趣做个独立开发者，开发一些小游戏，只学习一些api和框架是没用的，图形类知识才是核心，未来我会不定期更新相关图形类内容。 在游戏领域中，我们经常会遇…","is_real_data":0},{"article_id":"6864555867023343623","user_id":"1503787635450584","category":"Android","create_time":"1598278967","is_original":1,"digg_count":9,"comment_count":1,"view_count":362,"cover_image":"","title":"反思｜Android 输入系统 & ANR机制的设计与实现","brief_content":"对于Android开发者而言，ANR是一个老生常谈的问题，站在面试者的角度，似乎说出 「不要在主线程做耗时操作」 就算合格了。 但是，ANR机制到底是什么，其背后的原理究竟如何，为什么要设计出这样的机制？这些问题时时刻刻会萦绕脑海，而想搞清楚这些，就不得不提到Android自身…","is_real_data":0},{"article_id":"6863832433062739981","user_id":"2946346892396120","category":"后端","create_time":"1598110839","is_original":1,"digg_count":35,"comment_count":0,"view_count":1618,"cover_image":"","title":"最完整的Explain总结，SQL优化不再困难","brief_content":"会在 explain 的基础上额外提供一些查询优化的信息。紧随其后通过 show warnings 命令可以 得到优化后的查询语句，从而看出优化器优化了什么。额外还有 filtered 列，是一个半分比的值，rows * filtered/100 可以估算出将要和 explai…","is_real_data":0},{"article_id":"6861725116389130254","user_id":"2858385961407853","category":"前端","create_time":"1597620122","is_original":1,"digg_count":425,"comment_count":41,"view_count":14064,"cover_image":"","title":"学习Vue3.0,先来了解一下Proxy","brief_content":"据悉Vue3.0的正式版将要在本月(8月)发布，从发布到正式投入到正式项目中，还需要一定的过渡期，但我们不能一直等到Vue3正式投入到项目中的时候才去学习，提前学习，让你更快一步掌握Vue3.0,升职加薪迎娶白富美就靠它了。不过在学习Vue3之前，还需要先了解一下Proxy,它…","is_real_data":0},{"article_id":"6864741195407917069","user_id":"3122268755225869","category":"阅读","create_time":"1598322126","is_original":1,"digg_count":1,"comment_count":0,"view_count":69,"cover_image":"","title":"Kafka技术核心笔记（三）基本使用（1）","brief_content":"所谓分区策略是决定生产者将消息发送到哪个分区的算法。Kafka 为我们提供了默认的分区策略，同时它也支持你自定义分区策略。 如果要自定义分区策略，你需要显式地配置生产者端的参数partitioner.class。这个参数该怎么设定呢？方法很简单，在编写生产者程序时，你可以编写一…","is_real_data":0},{"article_id":"6864199183957262350","user_id":"1899555155885902","category":"后端","create_time":"1598195999","is_original":1,"digg_count":9,"comment_count":0,"view_count":1043,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/131dfa0ef5ab480c8261ed2eccb9dd24~tplv-k3u1fbpfcp-zoom-1.image","title":"速看!今天我才知道,UUID还分五个版本","brief_content":"通用唯一识别码（英语：Universally Unique Identifier，缩写：UUID）是用于计算机体系中以识别信息数目的一个128位标识符，还有相关的术语：全局唯一标识符（GUID）。 根据标准方法生成，不依赖中央机构的注册和分配，UUID具有唯一性，这与其他大多数…","is_real_data":0},{"article_id":"6864713166392131591","user_id":"1574156384091320","category":"阅读","create_time":"1598315597","is_original":1,"digg_count":1,"comment_count":0,"view_count":82,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f3c3562907f40d28217f6a48a432070~tplv-k3u1fbpfcp-zoom-1.image","title":"GitHub 热点速览 Vol.34：亚马逊、微软开源项目带你学硬核技术","brief_content":"以下内容摘录自微博@HelloGitHub 的 GitHub Trending 及 Hacker News 热帖（简称 HN 热帖），选项标准：新发布 | 实用 | 有趣，根据项目 release 时间分类，发布时间不超过 7 day 的项目会标注 New，无该标志则说明项目 …","is_real_data":0},{"article_id":"6864665318003277838","user_id":"1195873128420968","category":"前端","create_time":"1598306503","is_original":1,"digg_count":0,"comment_count":0,"view_count":71,"cover_image":"","title":"[翻译]vue3指南-06Class and Style Bindings 类名和样式值绑定","brief_content":"A common need for data binding is manipulating an element's class list and its inline styles. Since they are both attributes, we can use v-…","is_real_data":0},{"article_id":"6864606243550560269","user_id":"1503787636243351","category":"阅读","create_time":"1598292465","is_original":1,"digg_count":0,"comment_count":0,"view_count":69,"cover_image":"","title":"浅谈iOS中的唯一标识符","brief_content":"人从生下来开始就得上户口，从而获得一个身份证号，从此这个身份证号如影随形，跟这个人永远绑在一起，再也不分离。有些手续办起来，认号不认人，因为这个身份证号是唯一的，而人可能会变，比如整容等各种手段，所以判断是否是这个人，身份证号是一个相对不错的手段。 同样，一台设备，如果要有个准…","is_real_data":0},{"article_id":"6864550430081941518","user_id":"3737995265978669","category":"后端","create_time":"1598277751","is_original":1,"digg_count":3,"comment_count":0,"view_count":402,"cover_image":"","title":"@Async 用了这么久，你真的了解吗 --- @Async核心原理解析","brief_content":"相信很多朋友都使用过 @Async ，在某个方法上加上该注解，就会异步执行该方法。 之前一直使用 @Async ，直到最近遇到一个问题，才引发深入了解它的兴趣。 这个问题之前也遇到过多次，凭借多年的编码经验（也就不到一年，哈哈），虽然也能解决此类问题，但是本着彻底解开心中迷惑的…","is_real_data":0},{"article_id":"6864443789969358855","user_id":"3438928104003758","category":"前端","create_time":"1598252877","is_original":1,"digg_count":10,"comment_count":0,"view_count":222,"cover_image":"","title":"理解高阶函数,修炼编程内功","brief_content":"柯里化是把一个多参数函数转化成一个嵌套的一元函数的过程,从功能上说，它实现了函数功能的细化。","is_real_data":0},{"article_id":"6863974361737478151","user_id":"1873223546578589","category":"前端","create_time":"1598143987","is_original":1,"digg_count":33,"comment_count":12,"view_count":1337,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/53f3fcade3ef426c8df147dbf371b44c~tplv-k3u1fbpfcp-zoom-1.image","title":"实战中学习浏览器工作原理 — HTML 解析与 CSS 计算","brief_content":"上一部分我们完成了从 HTTP 发送 Request，到接收到 Response，并且把 Response 中的文本都解析出来。 这一部分我们主要讲解如何做 HTML 解析 和 CSS 计算这两个部分。 根据我们上部分列出的一个完整的浏览器架构的话，蓝色背景的部分就是我们目前已…","is_real_data":0},{"article_id":"6864367531055857678","user_id":"43636194286093","category":"前端","create_time":"1598235227","is_original":1,"digg_count":6,"comment_count":0,"view_count":516,"cover_image":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/99b9be6d389746669da30803424b5015~tplv-k3u1fbpfcp-zoom-1.image","title":"FlutterDojo设计之道——状态管理之路（一）","brief_content":"Flutter万物皆Widget的理念很容易搭建出这样一个WidgetTree。 在这个Widget Tree中，通常会存在很多组件之间的相互依赖，时间一长，就很容易变成下面这样。 这是申明式编程的通病，因为Widget用于展示数据，而数据可能来源于很多其它的Widget，这时…","is_real_data":0},{"article_id":"6864135607468163079","user_id":"1134351729308727","category":"前端","create_time":"1598181136","is_original":1,"digg_count":9,"comment_count":2,"view_count":962,"cover_image":"","title":"JS代码要不要加分号?","brief_content":"","is_real_data":0},{"article_id":"6861749238466576397","user_id":"4406498333825357","category":"后端","create_time":"1597625532","is_original":1,"digg_count":405,"comment_count":19,"view_count":12460,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/981c3922f5d94088a70c14d75157146a~tplv-k3u1fbpfcp-zoom-1.image","title":"秒杀系统设计","brief_content":"我之前写过一个秒杀系统的文章不过有些许瑕疵，所以我准备在之前的基础上进行二次创作，不过让我决心二创秒杀系统的原因是我最近面试了很多读者，动不动就是秒杀系统把我整蒙蔽了，我懵的主要是秒杀系统的细节大家都不知道，甚至不知道电商公司一个秒杀系统的组成部分。 首先设计一个系统之前，我们…","is_real_data":0},{"article_id":"6864210697292054541","user_id":"2893570337168663","category":"后端","create_time":"1598198662","is_original":1,"digg_count":15,"comment_count":0,"view_count":809,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30381023af714bf9b8bd0516130f077d~tplv-k3u1fbpfcp-zoom-1.image","title":"AQS基础——多图详解CLH锁的原理与实现","brief_content":"自旋锁说白了也是一种互斥锁，只不过没有抢到锁的线程会一直自旋等待锁的释放，处于busy-waiting的状态，此时等待锁的线程不会进入休眠状态，而是一直忙等待浪费CPU周期。因此自旋锁适用于锁占用时间短的场合。 这里谈到了自旋锁，那么我们也顺便说下互斥锁。这里的互斥锁说的是传统…","is_real_data":0},{"article_id":"6864351255016914951","user_id":"131597124242071","category":"后端","create_time":"1598231568","is_original":1,"digg_count":8,"comment_count":0,"view_count":578,"cover_image":"","title":"图解 K8s 核心概念和术语","brief_content":"我第一次接触容器编排调度工具是 Docker 自家的 Docker Swarm，主要解决当时公司内部业务项目部署繁琐的问题，我记得当时项目实现容器化之后，花在项目部署运维的时间大大减少了，当时觉得这玩意还挺新鲜的，原来自动化运维可以这么玩。后面由于工作原因，很久没碰过容器方面的…","is_real_data":0},{"article_id":"6860703641037340686","user_id":"3913917123796088","category":"前端","create_time":"1597382113","is_original":1,"digg_count":320,"comment_count":41,"view_count":12922,"cover_image":"","title":"如何用 Typescript 写一个完整的 Vue 应用程序","brief_content":"Vue 是一个惊人的，轻量的渐进式前端框架。因为 Vue 是灵活的，所以用户不需要使用 Typescript。但是不像 Angular，老版本的 Vue 并没有很好的支持 Typescript。因为这点，大多数 Vue 应用程序都是直接使用 JavaScript 写的。 现在随…","is_real_data":0},{"article_id":"6864381092061773831","user_id":"1688448856764088","category":"前端","create_time":"1598238302","is_original":1,"digg_count":12,"comment_count":0,"view_count":622,"cover_image":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7488827d17a746e98766e708e04015db~tplv-k3u1fbpfcp-zoom-1.image","title":" 微前端“容器”——microcosmos实现","brief_content":"我第一次听说微前端这个概念是在一年前左右偶然看到了美团的一篇技术博客：用微前端的方式搭建单页应用。然而那时候我连单页面应用是什么都还不知道，自然是看的一头雾水了。目前大家普遍认为微前端的概念由ThoughtWorks在2016年提出。四年的时间，飞速发展，目前我们已经能看到很多…","is_real_data":0},{"article_id":"6862156294611009544","user_id":"3737995267297838","category":"前端","create_time":"1597720368","is_original":1,"digg_count":346,"comment_count":15,"view_count":8237,"cover_image":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85298830999e429cb759d72f80f3f7a9~tplv-k3u1fbpfcp-zoom-1.image","title":"从图片裁剪来聊聊前端二进制","brief_content":"前两天项目中有个小需求：前端下载后台小哥返回的二进制流文件。 然后非IE的通过URL.createObjectURL()将Blob(Blob是啥？不知道？没关系，我下面会具体装逼讲解的)构建为一个object URL对象、指定文件名&#x26;文件类型、创建a链接模拟点击实现下…","is_real_data":0},{"article_id":"6864116214118449160","user_id":"1028798612248270","category":"前端","create_time":"1598176805","is_original":1,"digg_count":11,"comment_count":4,"view_count":616,"cover_image":"","title":"React 编码实战 ---- 一步步实现可扩展的架构（2）","brief_content":"在 React 编码实战 ---- 一步步实现可扩展的架构（1） 中，我们跟随小白一起，从一个简单的需求实现，一步步考虑 组件复用 和 分层解耦，让代码架构更具有扩展性。今天，我们会进一步跟随小明的建议，继续提高架构的可扩展性。 「我们来一起捋一捋。基于之前的需求，我们是实现了…","is_real_data":0},{"article_id":"6864357870847295501","user_id":"4441682704609320","category":"后端","create_time":"1598232946","is_original":1,"digg_count":6,"comment_count":0,"view_count":838,"cover_image":"","title":"Spring 源码第 8 篇，各种属性的解析","brief_content":"Spring 源码解析第 8 篇，继续。 现在关于 bean 节点的配置大家都了解了，我们接下来就来看下完整的解析过程。 parseBeanDefinitionAttributes 方法用来解析普通属性，我们已经在上篇文章中分析过了，这里不再赘述，今天主要来看看其他几个方法的解…","is_real_data":0},{"article_id":"6864505596692037639","user_id":"1899557248829438","category":"iOS","create_time":"1598267305","is_original":1,"digg_count":3,"comment_count":1,"view_count":365,"cover_image":"","title":"iOS开发~UIView layer 之前的关系","brief_content":"","is_real_data":0},{"article_id":"6864575744975536135","user_id":"3940246036416845","category":"后端","create_time":"1598283612","is_original":1,"digg_count":5,"comment_count":0,"view_count":282,"cover_image":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ffaed328812c41639c058de5f8164d3c~tplv-k3u1fbpfcp-zoom-1.image","title":"解Bug之路——Nginx 502 Bad Gateway","brief_content":"","is_real_data":0},{"article_id":"6864556879902130183","user_id":"3157453124930205","category":"阅读","create_time":"1598279222","is_original":1,"digg_count":1,"comment_count":1,"view_count":264,"cover_image":"","title":"对节流和防抖函数的理解","brief_content":"目的是防止函数执行的频率过快,影响性能.常见于跟滚动,鼠标移动事件绑定的功能. 防抖函数对于接触过硬件的人也许更好理解,硬件按钮按下时,由于用户按住时间的长短不一,会多次触发电流的波动,加一个防抖函数就会只触发一次,防止了无意义的电流波动引起的问题. 应用在前端时,常见的场景是…","is_real_data":0}]